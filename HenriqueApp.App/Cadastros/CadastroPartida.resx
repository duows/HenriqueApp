<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAi2ElEQVR4Xu3dB7QuZ1n3YZLQpEcJHUQ6iNIFBMEgoJ8iRcSCKKAfTZp0pGikVykiyCcoIthAEQsg
        TZESShCQKoJIpIkSVBATUvz+ExPXWWfdyTlnzzvzPDNz/da61oJZGu79wj3nObP3ft9zpP8G4HS/EtJm
        qpYAYItuFtJmqpYAYGs+H0eEtJmqRQDYmueEtKmqRQDYmpuGtKmqRQDYks/E4SFtqmoZALbkWSFtrmoZ
        ALbkxiFtrmoZALbi+DgspM1VLQTAVjwjpE1WLQTAVtwwpE1WLQTAFnj8r01XLQXAFjwtpM1WLQXAFtwg
        pM1WLQXA2v1DePyvTVctBsDaPSWkTVctBsDaXS+kTVctBsCafTI8/tfmq5YDYM2eFNLmq5YDYM2uHdLm
        q5YDYK0+EZJStSAAa/X4kJSqBQFYq28PSalaEIA1+lhIOqNqSQDW6JdC0hlVSwKwRtcMSWdULQnA2nw0
        JO1TtSgAa3NMSNqnalEA1uYaIWmfqkUBWJMPhqT9qpYFYE0eG5L2q1oWgDW5ekjar2pZANbi/SGpqFoY
        gLV4dEgqqhYGYC2uFpKKqoUBWIO/CUlnUbU0AGvw8yHpLKqWBmANrhSSzqJqaQCW7riQdDZViwOwdI8I
        SWdTtTgAS3fFkHQ2VYsDsGTvDkkHqFoegCV7aEg6QNXyACzVaXH5kHSAqgUCWKpjQ9JBVC0QwFI9OCQd
        RNUCASzR8Pj/m0PSQVQtEcASvT0kHWTVEgEs0c+FpIOsWiKApRke/18uJB1k1SIBLM1bQ9IhVC0SwNI8
        ICQdQtUiASzJqXHpkHQIVcsEsCRvCUmHWLVMAEtyv5B0iFXLBLAUw+P/S4WkQ6xaKICleHNI2kPVQgEs
        xX1C0h6qFgpgCU6Ji4ekPVQtFcASvDEk7bFqqQCW4F4haY9VSwXQu+Hx/8VC0h6rFgugd68PSSOqFgug
        d/cISSOqFgugZyfHUSFpRNVyAfTsdSFpZNVyAfTsZ0LSyKrlAujV1+ObQtLIqgWDqQ2/wlVdhwN5bUja
        QdWCsTwnxUfiVfG0+L9x87h1VP/3rQ3fw71AXC9+Ip4Qr4gPxfC1VP8/MLh7SNpB1YLRrxPibfHCeETc
        Kb41zhlVF4zTovpntfSsOKuGr+UKcct4YAxf6xviC1H9s9iO4fH/N4akHVQtGW0Nf8gfF38QT4mfiuFv
        ysPfmPfS56L6z2np3rGXjozhtRhek+G1+dP4ZAyfCV/957Auw3/fknZUtWRMb3jMPfzBNdzQhj/I7hnD
        33gvGbvuL6OaoaXh2xO77NwxPAkZnogMT0ZeGsMh6j+j+s9nmYaDn6QdVS0Z0xj+YPqeuFwcFnM1PEKv
        5mnpEjFHR8SV4jbxsPhAVPPQvxPjIiFpR1WLxjRuGC16aFTztPLlaNWfRDUT/Xt1SNph1aIxjVaPL28b
        1TytvCNa9fGoZqJ/dwlJO6xaNKbx+GjR1aKap5UXR4uGnxMY3kO+mom+DY//LxySdli1bEzj96NFvf3B
        9/Bo0fBDgtU89G94fwtJO65aNqbxvmjV30c1Uws/GC364ajmoX93Dkk7rlo2pvHVmPOn//ftz6OaqYUr
        R4seE9U89O2/4kIhacdVC8d0LhMtGt55r5pnbsP7H5zVuxZO3cuimom+vTIkTVC1cEznFtGi+0Q1z9yG
        9/pv1fDGQNVM9O1HQ9IEVQvHdPb6FrhjG96AqJpnbsMH/rRo+NbLV6KaiX4N7+S417fAlnSAqqVjOs+M
        Fl02qnnm1upXIYd3X6zmoW/D52FImqhq6ZjOn0WLhr8BDz+EWM00p+Gjf1vU68cic/aGz3aQNFHV0jGd
        4Z3oWvX+qGaa0/BJfi16QFTz0K/h8f/5Q9JEVYvHdIY35DlXtGh4nFrNNJfTotX3c58f1Uz06/dC0oRV
        i8e0rhotekJU88zl09GqN0c1E/26Y0iasGrxmFard8K7a1TzzOUvolWfj2om+jT8vIrH/9LEVcvHtB4S
        LbpxVPPM5TnRouEz5Kt56NfvhKSJq5aPaf1atOgbo5pnLsObEbXoRlHNQ7/uEJImrlo+pjV8P7pV/xrV
        THM4Olp0t6jmoU//Ed8QkiauWkCm9Zlo1dujmmkOl4gWPSWqeejTb4ekGaoWkGkNvw53wWjRb0Y109S+
        HK16dVQz0afbhqQZqhaQ6V0nWvSoqOaZ2rHRqr+Laib68+9x3pA0Q9USMr0fixb9cFTzTG148tCic8fw
        5kvVTPTnt0LSTFVLyPR+IVr07VHNM7VHRIuuEdU89Ok2IWmmqiVkeq1+0Gn46epTo5ppSq2+rzu8m1w1
        D/0Zfk7kPCFppqpFZHrvilYNb8lbzTSlq0SLHh3VPPSn1beJpM1WLSLT+7do1RuimmkqJ8U5o0XDk5Zq
        Jvrz/SFpxqpFZB4Xixb9alTzTOXD0ar3RDUTfRke/w8/sClpxqplZB43jRY9MKp5pvLKaNFhMfxaWTUT
        fXlxSJq5ahmZx09Hi/5PVPNMZfgY4hZdJqp56M/3haSZq5aReQxvUduiK0Y1z1TuEi26VVTz0JcTwuN/
        qUHVQjKPP4oWHREnRjXTFK4fLbp/VPPQl18PSQ2qFpJ5fCha9ZGoZtq14XMPLhQtmvuHHdmb4UmNpAZV
        C8k8hr+FD38bb9EfRzXTrv1TtOpNUc1EP/4lWv2KqLT5qqVkPt8SLXpaVPPs2uujVZ+Naib68WshqVHV
        UjKf740W3SOqeXbtudGi4dsOw7cfqpnox/eEpEZVS8l8hh9Ua9HNo5pn1342WnTDqOahH18Mj/+lhlWL
        yXxa/Q35klHNs2u3iBbdNap56MfzQ1LDqsVkPq+LVg2fR1DNtEuXihY9Oap56MfRIalh1WIyn3+IVk39
        PvnD2/AOb8fboldFNRN9+EK0+g0YSWdULSfzGT6b/7zRopdHNdOuvDNa9bGoZqIPzwtJjauWk3ldM1p0
        TFTz7MpLokXniq9HNRN9GH4IVVLjquVkXj8ULbpzVPPsyiOjRVePah768Pnw+F/qoGpBmVerPyiH9+iv
        5tmV20eL7hDVPPSh1W++SNqvakGZV6vPQr9gVPPsylWjRY+Kah76cNOQ1EHVgjKvt0arhsex1UxjDd+D
        H74X36Lfimom2vtcHB6SOqhaUub1z9Gqt0Q101jDpw226t1RzUR7zwpJnVQtKfM7Mlo0fBZ7Nc9YfxSt
        Gt5/oJqJ9r4zJHVStaTM7zuiRQ+Lap6xnhgtunRU89De8NHQrd4YSlJRtajM7y7RottFNc9YPxUtGj5d
        rpqH9p4ZkjqqWlTm97ho0VS/M3+DaNH9opqH9m4UkjqqWlTm93vRonPHyVHNNMbwefwtGt5itpqHto4P
        j/+lzqqWlfn9TbTqE1HNtFefiVa9MaqZaOvpIamzqmVlfl+NVn9Dek1UM+3V8Idwq4bDRzUTbbX6IVdJ
        Z1O1rLQx/AR7i54d1Tx79SvRouHbDqdFNRPtfCo8/pc6rFpY2jg6WnTfqObZq+Gf16Lhb5nVPLT11JDU
        YdXC0sa9okW3imqevRp+Fa9Fw68eVvPQ1vVCUodVC0sbz4gWXS6qefaq1bcynhTVPLTzyfD4X+q0amlp
        40+iRcMN+j+jmulQDW/D2+qGP7z9cDUT7QyHMkmdVi0tbfxdtOoDUc10qN4VrRo+gKiaiXauE5I6rVpa
        2hjekKfVR+i+IqqZDtXwUbwtGl63k6KaiTaG95eQ1HHV4tLOVaJFw4f3VPMcqp+PFl0tqnlo5wkhqeOq
        xaWd20SL7hbVPIfqDtGi20c1D+1cKyR1XLW4tPPgaNHwOe3VPIdq+HChFj0yqnloo+XPs0g6yKrlpZ0X
        RIsuGtU8h+LrMXy4UIteEtVMtNHq0y0lHULV8tLOm6JVX4pqpoP10WjVO6OaiTa+LSR1XrW8tPNP0apj
        o5rpYL0qWvXlqGZifh8LSQuoWmDaGT7M5gLRouFX+KqZDtaTo0WXimoe2jgmJC2gaoFp69rRokdHNc/B
        umu06BZRzUMb1whJC6haYNr6kWjRnaKa52C1+sz3XX+aIXv3wZC0kKolpq3HRouG39uu5jlYF4kWPTeq
        eZjfL4SkhVQtMW29NFr0DXFqVDMdyGejVW+Iaibm1+p9ICTtoWqJaWv4lbZWHR/VTAfS8tcXh9+cqGZi
        XsMHSklaUNUi09YJ0ao3RjXTgTwvWjT8xsTwmxPVTMzrMSFpQVWLTHtHRYueH9U8B3L/aNH1o5qH+Q0f
        yCRpQVWLTHs3iRY9KKp5DuSW0aKfjGoe5vW+kLSwqmWmvbtHi34gqnkO5DLRouEjZ6t5mNejQtLCqpaZ
        9p4ULbpSVPOcna/EYdGiP4xqJuZ15ZC0sKplpr1XRouOiJOimumsvCda9eGoZmI+7w1JC6xaaNpr+Y5q
        w6f6VTOdlVbvW3DOODGqmZjPI0PSAqsWmvaGP9iGv4236NVRzXRWhs8QaNFVopqHeQ3fNpK0wKqFpg+X
        jxY9Pap5zsoPRYtuF9U8zOfdIWmhVUtNH24dLbpnVPOclVaf/vaIqOZhPg8LSQutWmr6cL9o0XdHNU/l
        5DhPtOg3o5qJ+VwhJC20aqnpw3OiRZeKap7Kx6JVx0Y1E/No+ZkVknZQtdj04bXRqv+Iaqb9/XG0avjM
        hGom5vGQkLTgqsWmD5+MVg2/213NtL+nRIsuGdU8zGP4AKZvDkkLrlpu+jB8Nv95o0W/G9VM+7tbtOjo
        qOZhHu8ISQuvWm760eon7I+Jap793ShadJ+o5mEew4dGSVp41XLTj9tHi34iqnn2d2S0aPgByWoepjc8
        /r9cSFp41YLTj+F33Vt0g6jm2dfnolV/EdVMTO9tIWkFVQtOP14ULbpwVPPs683RquOjmonpPTAkraBq
        wenHX0ervhDVTGd6frTo/DE8hq5mYlrDD6ZeOiStoGrJ6cfwh3CrhsNHNdOZHhAtul5U8zC9t4SklVQt
        OX25SLRo+PZDNc+ZWn1WwcH+gCK71+rtqSVNULXk9GX4gbwWHejDdi4bLXp8VPMwreHx//A20ZJWUrXo
        9GX4G2+L7hDVPIOvxmHRoldENRPT+suQtKKqRacvw5vytGh4E6JqnsFx0aoPRTUT0/rZkLSiqkWnL8Pb
        8rZo+JjfU6Ka6WXRoiPixKhmYjrD4//h8xckrahq2enL8ME8rRo+kKia6THRoitHNQ/TelNIWlnVstOX
        r0Sr77cPH0lczXTHaNFto5qHad07JK2satnpT6ufvj6r99z/1mjRw6Oah+kM3wa6WEhaWdXC05/vjhYN
        v/e9/yzDHwjDzwe06Ddi/3mY1htC0gqrFp7+3DNaNLzZz/6zfDxaNXwO/f7zMK1W/9uTNHHVwtOfp0eL
        Lh/7z/LqaNUJsf88TOfk8PhfWmnV0tOfVn/oHh5fi31neWq06OKx7xxM73UhaaVVS09/Phqt+mDsO8vd
        o0XDz0HsOwfT+5mQtNKqpac/X49zRYv+MPad5cbRouFX0fadg2kN/5v7ppC00qrFp09XihY9Kfad48ho
        0bNj3zmY1mtC0oqrFp8+/UC0aHjkf+YMXxguNGr4fvS+rwfTavWtHkkzVS0+fXpQtOgmceYMLT8R7h9j
        39eD6QyP/78xJK24avnp0/OjRUfFmTO8YLjQoPPF8IE0+74eTOfPQtLKq5afPr0xWvWlGGZ44On/bv6u
        G/u/HkznriFp5VXLT5+Oj1a9M4YZvvf0fzd/d479Xw+mcVK0+kFPSTNW3QDo02lx/mjRS2OY4XKn/7v5
        e1zs/3owjT8JSRuougHQr2tFix4b/xnDOwO26A+iej3YvZ8MSRuougHQrztFi3403vs//7JJ+78bIdM4
        MS4ckjZQdROgX4+OFl07Xv4//3L2joj/iur1YLdeFZI2UnUToF+/FVtreAfE6rVg94YftpS0kaqbAP06
        NrbWbaJ6Ldit4SnLhULSRqpuBPRr+Dz8rfWwqF4Ldmv40CdJG6q6EdC3i8aWelFUrwO79WMhaUNVNwL6
        9p2xpd4e1evA7gy/4nmBkLShqpsBfbtbbKl/jep1YHdeEZI2VnUzoG9PjK10saheA3brR0LSxqpuBvRt
        S39bu1lUrwG7Mzz+b/UW05IaVt0Q6NsHYivdK6rXgN35/ZC0waobAn37WrR6T/65e1ZUrwG788MhaYNV
        NwT61+pT+ebutVF9/eyGx//ShqtuCvTvVrGFPhXV189u/G5I2mjVTYH+3TfW3vni1Ki+fnbjDiFpo1U3
        Bfr37Fh714nqa2c3/iO+ISRttOrGQP9eE2vvx6P62tmNl4WkDVfdGOjfJ2Lt/VJUXzu7cbuQtOGqGwP9
        OyXOE2tu+P306mtnvOHx/3lD0oarbg4sw9VjzQ1veFR93Yz30pC08aqbA8uw5ke4wxsdDW94VH3djPeD
        IWnjVTcHluFhsdauGNXXzHhfjrV/+0jSQVTdIFiGX4+19gNRfc2M95KQpPIGwTK8JdbaQ6L6mhlvOFxJ
        UnmDYBk+H2tteLpRfc2MMzz+P3dIUnmTYDkuHGvsrVF9vYzzGyFJp1fdJFiO68ca+5eovl7G+b6QpNOr
        bhIsx51jbR0V1dfKOCeEx/+S/rfqRsFyHBNr67ui+loZZ82/NSJpD1U3Cpbj5bG27hnV18o4tw5J+t+q
        GwXL8Z5YW8+M6mtl74afqThnSNL/Vt0sWI7hQ10OizU1fNRx9bWydy+MHnpRHAd0obxZAOtyy2jdRePk
        qOYD5ldeBNajl8f/945qPqCN8iKwHi+IHnpzVPMBbZQXgfW4RbRueG8Hj/+hL+VFYB2+GD08/r9vVPMB
        7ZQXgXX41eihv4pqPqCd8iKwDjeP1l0iTolqPqCd8iKwfMPHRR8Rrbt/VPMBbZUXgeV7bvTQX0c1H9BW
        eRFYvuFDlVp3yTg1qvmAtsqLwLJ9Lg6P1j0wqvmA9sqLwLI9O3robVHNB7RXXgSW7SbRusuEx//Qr/Ii
        sFz/FD08/n9QVPMBfSgvAsv1y9FD74hqPqAP5UVguW4crbtsnBbVfEAfyovAMh0fh0XrHhrVfEA/yovA
        Mj0jeuhdUc0H9KO8CCzTd0TrLhce/0P/yovA8nw6enj8//Co5gP6Ul4Eluep0UPviWo+oC/lRWB5rh+t
        +5bw+B+WobwILMs/RA+P/x8Z1XxAf8qLwLI8OXrovVHNB/SnvAgsy3WjdVeIajagT+VFYDk+GT30qKjm
        A/pUXgSW44nRQ++Laj6gT+VFYDmuHa27SlSzAf0qLwLL8HfRQ4+Naj6gX+VFYBkeHz30t1HNB/SrvAgs
        w7dF664a1WxA38qLQP8+Fj30i1HNB/StvAj075jooQ9FNR/Qt/Ii0L9vjdZdLarZgP6VF4G+fTR6aHgK
        Uc0H9K+8CPRt+L57D304qvmA/pUXgb5dI1o3/AZCNRuwDOVFoF/D79z30OOimg9YhvIi0K/hXfd66CNR
        zQcsQ3kR6NfVo3XXimo2YDnKi0Cf3h89NHwCYTUfsBzlRaBPj44e+nhU8wHLUV4E+nTlaN11o5oNWJby
        ItCf90YPPTmq+YBlKS8C/Xlk9NDfRzUfsCzlRaA/V4rWXT+q2YDlKS8CfXlP9NBTo5oPWJ7yItCXh0cP
        fSKq+YDlKS8CfblitO47opoNWKbyItCPd0UPPT2q+YBlKi8C/XhotO6w+FRU8wHLVF4E+nBaXD5ad6Oo
        5gOWq7wI9OHY6KFfjmo+YLnKi0AfHhytGx7/fzqq+YDlKi8C7Q2P/785WneTqOYDlq28CLT3tuihZ0c1
        H7Bs5UWgvQdG6w6Pz0Q1H7Bs5UWgrVPj0tG674pqPmD5yotAW38dPfTcqOYDlq+8CLR1/2jd8Pj/s1HN
        ByxfeRFoZ3j8f6lo3c2jmg9Yh/Ii0M5fRQ89L6r5gHUoLwLt3DdaNzz+/1xU8wHrUF4E2ujl8f/RUc0H
        rEd5EWjjzdFDL4hqPmA9yotAG/eJ1h0R/xzVfMB6lBeB+Z0SF4/W3TKq+YB1KS8C83tj9NALo5oPWJfy
        IjC/e0brzhke/8M2lBeBeZ0cF4vW3Tqq+YD1OcdxQHMvih769ahuFMD6SNLpnSv+NaobBXs3/Grn8O0d
        9u7fo3ptGUeSTu/7orpJMM7wiYoa1xeiem0ZR5JO78VR3SQYxwFgfA4A05Ck0x//fymqmwTjOACMzwFg
        GpJ0ju+P6gbBeA4A43MAmIYkneMlUd0gGM8BYHwOANOQtPHOHSdEdYNgPAeA8TkATEPSxvvBqG4O7IYD
        wPgcAKYhaeO9NKqbA7vhADA+B4BpSNpw54l/i+rmwG44AIzPAWAakjbc7aK6MbA7DgDjcwCYhqQN97Ko
        bgzsjgPA+BwApiFpo503vMf69BwAxucAMA1JG+0OUd0U2C0HgPE5AExD0kb7nahuCuyWA8D4HACmIWmD
        efw/HweA8TkATEPSBrtjVDcEds8BYHwOANOQtMF+P6obArvnADA+B4BpSNpY54uvRnVDYPccAMbnADAN
        SRvrR6K6GTANB4DxOQBMQ9LGekVUNwOm4QAwPgeAaUjaUB7/z88BYHwOANOQtKF+LKobAdNxABifA8A0
        JG2oP4zqRsB0HADG5wAwDUkb6QLxtahuBEzHAWB8DgDTkLSR7hzVTYBpOQCMzwFgGpI20quiugkwLQeA
        8TkATEPSBrpgePzfhgPA+BwApiFpA90lqhsA03MAGJ8DwDQkbaBXR3UDYHoOAONzAJiGpJV34TgxqhsA
        02t1ADg6XrgSvn01DUkr765RLT/zaHUAuH9U88CZJK28P4tq+ZmHAwC9krTiLhInRbX8zMMBgF5JWnF3
        j2rxmY8DAL2StOJeE9XiMx8HAHolaaUdGR7/t+cAQK8krbSfiWrpmZcDAL2StNJeF9XSMy8HAHolaYV9
        U3w9qqVnXg4A9ErSCrtHVAvP/BwA6JWkFfb6qBae+TkA0CtJK+uicXJUC8/8HADolaSVde+olp02HADo
        laSV9aaolp02HADolaQVdVR4/N8XBwB6JWlF/WxUi047DgD0StKK+suoFp12HADolaSVdIk4JapFpx0H
        AHolaSXdL6olpy0HAHolaSW9Jaolpy0HAHolaQV5/N8vBwB6JWkFPSCqBac9BwB6JWkFvTWqBac9BwB6
        JWnhXSZOjWrBac8BgF5JWngPimq56YMDAL2StPDeEdVy0wcHAHolacFdNk6LarnpgwMAvZK04B4S1WLT
        DwcAeiVpwb0zqsWmHw4A9ErSQvP4fxkcAOiVpIX20KiWmr60OgCcJ45ciS9G9doyjqSF9u6olpq+tDoA
        rKkvRPXaMo6kBfYt4fH/MjgAjM8BYBqSFtgjolpo+uMAMD4HgGlIWmDHRbXQ9McBYHwOANOQtLCuEB7/
        L4cDwPgcAKYhaWE9Kqplpk8OAONzAJiGpIX1vqiWmT45AIzPAWAakhbUFaNaZPrlADA+B4BpSFpQj4lq
        kemXA8D4HACmIWlBfSCqRaZfDgDjcwCYhqSFdNWolpi+OQCMzwFgGpIW0i9EtcT0zQFgfA4A05C0kD4Y
        1RLTNweA8TkATEPSArpaVAtM/xwAxucAMA1JC+iYqBaY/jkAjM8BYBqSFtCHo1pg+ucAMD4HgGlI6rxr
        RrW8LIMDwPgcAKYhqfMeF9XysgwOAONzAJiGpM77SFTLyzI4AIzPAWAakjruWlEtLsvhADA+B4BpSOq4
        J0S1uCyHA8D4HACmIanjPhrV4rIcDgDjcwCYhqROu05US8uyOACMzwFgGpI67UlRLS3L4gAwPgeAaUjq
        tL+PamlZFgeA8TkATENSh10vqoVleRwAxucAMA1JHfaUqBaW5XEAGJ8DwDQkddgnolpYlscBYHwOANOQ
        1Fk3iGpZWSYHgPE5AExDUmc9LaplZZlOjBNW4qhokQPANCR11GHxqaiWFVq7eLTIAWAakjrqRlEtKvTA
        AWBdJHXUM6NaVOiBA8C6SOqk4fH/P0a1qNADB4B1kdRJ3xnVkkIvHADWRVInPSuqJYVeOACsi6QOGh7/
        fzqqJYVeOACsi6QOumlUCwo9cQBYF0kd9JyoFhR64gCwLpIad3h8JqoFhZ44AKyLpMbdLKrlhN44AKyL
        pMY9L6rlhN44AKyLpIYNj/8/F9VyQm8cANZFUsOOjmoxoUcOAOsiqWHPj2oxoUcOAOsiqVFHhBsbS+IA
        sC6SGvU9US0l9MoBYF0kNerXolpK6JUDwLpIatDw+P+fo1pK6JUDwLpIatCtolpI6JkDwLpIatD/i2oh
        oWcOAOsiaebOGV+MaiGhZw4A6yJp5r43qmWE3jkArIukmXtxVMsIvXMAWBdJM3au+FJUywi9cwBYF0kz
        9v1RLSIsgQPAukiasd+MahFhCRwA1kXSTHn8z9I5AKyLpJm6TVRLCEvhALAukmbqJVEtIet2fLxhJY6M
        FjkATEPSDJ0n/i2qJWTdnhsalwPANCTN0G2jWkDWzwFgfA4A05A0Q78d1QKyfg4A43MAmIakifP4f9sc
        AMbnADANSRN3+6iWj21wABifA8A0JE3cy6NaPrbBAWB8DgDTkDRh541/j2r52AYHgPE5AExD0oTdMarF
        YzscAMbnADANSRP2e1EtHtvhADA+B4BpSJqo88VXolo8tsMBYHwOANOQNFF3imrp2BYHgPE5AExD0kT9
        QVRLx7Y4AIzPAWAakiZoePz/1aiWjm1xABifA8A0JE3Qj0a1cGyPA8D4HACmIWmCXhnVwrE9DgDjcwCY
        hqQdd/7w+J8zOQCMzwFgGpJ23I9HtWxskwPA+BwApiFpx/1RVMvGNjkAjM8BYBqSdtgF42tRLRvb5AAw
        PgeAaUjaYXeJatHYLgeA8TkATEPSDnt1VIvGdjkAjM8BYBqSdtSF4r+iWjS2ywFgfA4A05C0o34qqiVj
        2xwAxucAMA1JO+pPo1oyts0BYHwOANOQtIMuEidGtWRsmwPA+BwApiFpB90tqgUDB4DxOQBMQ9IO+vOo
        FgwcAMbnADANSSMbHv+fFNWCgQPA+BwApiFpZD8d1XLBwAFgfA4A05A0stdGtVwweFXcklFOiOq1ZRxJ
        IzoyPP4HlkjSiO4R1WIB9E7SiF4f1WIB9E7SHrtonBzVYgH0TtIeu1dUSwWwBJL22BujWiqAJZC0h44K
        j/+BJZO0h+4T1UIBLIWkPfTmqBYKYCkkHWIXj1OiWiiApZB0iN03qmUCWBJJh9hfRbVMAEsi6RC6RHj8
        D6yBpEPoAVEtEsDSSDqE3hrVIgEsjaSD7JJxalSLBLA0kg6yn4tqiQCWSNJB9vaolghgiSQdRJeJ06Ja
        IoAlknQQPTiqBQJYKkkH0bFRLRDAUkk6QJcNj/+BtZF0gB4a1fIALJmkA/SuqJYHYMkknU2XD4//gTWS
        dDY9PKrFAVg6SWfTcVEtDsDSSTqLrhAe/wNrJeks+vmolgZgDSSdRX8T1dIArIGkoitGtTAAayGp6NFR
        LQzAWkgqen9UCwOwFpL26ypRLQvAmkjar8dGtSwAayJpv/42qmUBWBNJ+3TVqBYFYG0k7dMvRrUoAGsj
        aZ8+HNWiAKyNpDO6ZlRLArBGks7ol6JaEoA1knRGH4lqSQDWSFL69qgWBGCtJKXHR7UgAGslKX00qgUB
        WCtp8107quUAWDNp8z0xquUAWDNp8308quUAWDNp0103qsUAWDtp0z0lqsUAWDtp030iqsUAWDtps90g
        qqUA2AJpsz0tqqUA2AJps30yqqUA2AJpk90wqoUA2Appkz0jqoUA2Appcx0W/xjVQgBshbS5bhzVMgBs
        ibS5fjmqZQDYEmlTDY//Px3VMgBsibSpbhLVIgBsjbSpnhPVIgBsjbSZDo/PRLUIAFsjbaabRbUEAFsk
        baZfiWoJALZI2kTD4//PRrUEAFskbaLvjmoBALZK2kS/GtUCAGzQOf77/wPpwAi7Q4sacgAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>